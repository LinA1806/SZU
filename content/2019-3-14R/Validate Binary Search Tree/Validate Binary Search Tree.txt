2019.3.14


来源:leetcode 98. Validate Binary Search Tree


题目： 
给定二叉树, 确定它是否是有效的二叉树 (bst)。
假设 bst 的定义如下:
节点的左子树仅包含键小于节点键的节点。
节点的右子树仅包含键大于节点键的节点。
左、右子树也必须是bst。



分析：
递归

左子树的所・有・节点必须小于父节点
右子树的所・有・节点也必须小于父节点

定义一个最小值和最大值，向下递归时，
左子树的最大值更新为父节点的值，（最小值=父节点的最小值）
右子树的最小值更新为其父节点的值，（最大值=父节点的最大值）。
其中整棵树的根没有最大小值。

当前子树根节点小于等于最小值，或大于等于最大值，则此树不是bst树
只要其中一颗子树不是bst，该树就不是BST树
