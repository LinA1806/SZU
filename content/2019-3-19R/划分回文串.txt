2019-3-19

来源：leetcode131

题目：给定一个字符串 s, 拆分成若干个子字符串，每个子字符串都是回文。
求所有可能划分的方案

分析:
本题要求每个子字符串都要是回文，并且每个符合要求的分配方案都要存储

方法是动态规划，第一个字串可以长度为1，2，3....，第二个字串也可以长度为1,2,3...

难点在于，leetcode并不要求写完整程序，而是要求返回一个指针，指向所有方案的整体，
而且这个整体还必须得是预分配好的，不可以使用动态分配。。。还得返回方案数returnSize,每个方案的子串数和每个子串的长度。。。

我知道为什么没人在leetcode上用C写题了。。。

算法分为3个函数：
isPalin(char* s, int end)
给定字符串和结束位置判断从初始位置到结束位置的子串是不是回文

helper(char* s, char*** ret, int** colS, int* retS, char** cur, int k )
找第k个子串，当S指向字符串尾部时该方案为符合要求的方案

partition(char* s, int** columnSizes, int* returnSize) 
主函数，预分配空间，并从初始位置开始找方案

